<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- spring mvc -->
	
	<!-- 扫描web包，应用Spring的注解   扫描所有的controller 但是不扫描service-->
	<context:component-scan base-package="com.jxoa" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> 
	</context:component-scan>



	 <!-- 定义跳转的文件目录 和后缀 -->  
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
	
	
	
	<!-- CommonsMultipartResolver 上传文件-->

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			
			<!-- 上传文件大小 -->
			<property name="maxUploadSize" value="1024000000"></property>
		
	</bean>
	
	
	<!-- 定义国际化消息 --> 
   <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">   
    	<property name="basenames">
			<list>
				<value>config.internationalization.messages</value>
				<value>config.internationalization.validationMessages.system</value>
				<value>config.internationalization.validationMessages.personalOffice</value>
				<value>config.internationalization.validationMessages.files</value>
				<value>config.internationalization.validationMessages.coordination</value>
				<value>config.internationalization.validationMessages.common_platform</value>
				<value>config.internationalization.validationMessages.administration</value>
				<value>config.internationalization.validationMessages.personnel_matters</value>
				<value>config.internationalization.validationMessages.workFlow</value>
				<value>config.internationalization.validationMessages.salestask</value>
			</list>
		</property>
		
   </bean> 
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" 
		p:cookieName="clientLanguage"
		p:cookieMaxAge="10000"
		p:cookiePath="/"
		p:defaultLocale="zh"/>
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
   
    <!-- 自定义拦截器-->
	<mvc:interceptors>
		<!-- 登录拦截器 -->
		<bean id="loginInterceptor" class="com.jxoa.commons.interceptor.LoginInterceptor" >
			
		</bean>
	</mvc:interceptors>
   <!-- 自定义异常处理 -->
   <bean id="myActionException" class="com.jxoa.commons.exception.MyActionException"/>
   



	<!--  validator 校验 JSR-303验证框架   ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	<bean id="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	        <!-- 采用 Hibernate validator -->
	       <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
	       <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
	       <property name="validationMessageSource" ref="messageSource"/>
	       
	</bean>

	
	<!-- 添加注解驱动   注入validator 校验-->  
    <mvc:annotation-driven conversion-service="conversionService" validator="validator" /> 	
	<!-- Spring MVC 数据格式化  -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.jxoa.commons.converter.StringToDateConverter" />
				<bean class="com.jxoa.commons.converter.StringToTimestampConverter" />
				<bean class="com.jxoa.commons.converter.StringToStringConverter" />
			</list>
		</property>
	</bean>
	
</beans> 